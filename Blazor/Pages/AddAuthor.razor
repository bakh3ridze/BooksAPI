@page "/addauthor"
@using BooksAPI.Data.Entities
@using BooksAPI.Repository.AuthorRepository.Commands
@using BooksAPI.SDK2.AuthorHttpClient
@using BooksAPI.SDK2.CountryHttpClient
@inject IAuthorHttpClient _author_client
@inject ICountryHttpClient _country_client
@inject NavigationManager _navigator

<PageTitle>Add Author</PageTitle>

<h3>Add Author</h3>

@if (countries == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="@command">
        <InputText @bind-Value="command.Name" DisplayName="Name"></InputText>
        <InputSelect @bind-Value="command.CountryId" DisplayName="Country">
            @foreach(var country in countries)
            {
                <option value="@country.Id">@country.Name</option>
            }
        </InputSelect>
        <input type="button" value="submit" @onclick="CreateAuthor">
    </EditForm>
}

@code {
    protected CreateAuthorCommand command = new CreateAuthorCommand();

    IEnumerable<Country> countries = null;

    protected override async Task OnInitializedAsync()
    {
        countries = await _country_client.GetAll();
    }

    protected async Task CreateAuthor()
    {
        await _author_client.Create(command);
        _navigator.NavigateTo("/Authors");
    }
}
