@page "/addauthor"
@using BooksAPI.Data.Entities
@using BooksAPI.Repository.Models
@using BooksAPI.SDK2.AuthorHttpClient
@using BooksAPI.SDK2.CountryHttpClient
@using BooksAPI.Repository.AuthorRepository.Commands
@inject IAuthorHttpClient _author_client
@inject ICountryHttpClient _country_client
@inject NavigationManager _navigator
@using Blazor.Pages.Author

<PageTitle>Add Author</PageTitle>

<h3>Add Author</h3>

<style>
    form .row {
        margin-bottom: 16px;
    }
</style>

@if (countries == null)
{
    <p><em>Loading...</em></p>
}
else{
    <div class="row">
    <RadzenTemplateForm Data="command" Submit="CreateAuthor" TItem="CreateAuthorCommand">
        <div class="col-md-6">
            <RadzenFieldset Text="Add Author">
                <div class="row">
                    <div class="col-md-4 align-items-center d-flex">
                        <RadzenLabel Text="Name" />
                    </div>
                    <div class="col-md-8">
                        <RadzenTextBox style="width: 100%;" Name="Name" @bind-Value="command.Name"/>
                        <p><RadzenRequiredValidator Component="Name" Text="Field is Required" Style="position: absolute" /></p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 align-items-center d-flex">
                        <RadzenLabel Text="Country" />
                    </div>
                    <div class="col-md-8">
                        <RadzenDropDown @bind-Value="command.CountryId" Placeholder="Select Country" Data="@countries" style="width: 100%;" TextProperty="Name" ValueProperty="Id" Name="Author">
                        </RadzenDropDown>
                        <p><RadzenRequiredValidator DefaultValue="0" Component="Author" Text="Field is Required" Style="position: absolute" /></p>
                    </div>
                </div>
            </RadzenFieldset>
            <div class="row justify-content-center">
                <div class="col-md-12 d-flex align-items-end justify-content-center" style="margin-top: 16px;">
                    <RadzenButton ButtonStyle="ButtonStyle.Success" ButtonType="Radzen.ButtonType.Submit" Style="margin-right: 16px;" Icon="save" Text="Create"/>
                </div>
            </div>
        </div>
    </RadzenTemplateForm>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private CreateAuthorCommand command = new CreateAuthorCommand();

    private IEnumerable<Country> countries = null;

    protected override async Task OnInitializedAsync()
    {
        countries = await _country_client.GetAll();
    }

    private async Task CreateAuthor()
    {
        await _author_client.Create(command);
        _navigator.NavigateTo("/authors");
    }
}
